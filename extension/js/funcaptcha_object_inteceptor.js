var __funcaptchaInitParameters={};(function(){var a={};if(document.currentScript&&document.currentScript.dataset&&document.currentScript.dataset["parameters"]){try{a=JSON.parse(document.currentScript.dataset["parameters"])}catch(a){}}if(a.originalFuncaptchaApiUrl){var t=document.createElement("a");t.href=a.originalFuncaptchaApiUrl;if(t.hostname){__funcaptchaInitParameters.apiJSSubdomain=t.hostname}}if(a.originalFuncaptchaApiUrl&&a.currentFuncaptchaApiUrl&&a.originalFuncaptchaApiUrl!=a.currentFuncaptchaApiUrl){var n=document.getElementsByTagName("script");for(var r in n){if(n[r].src==a.originalFuncaptchaApiUrl){n[r].src=a.currentFuncaptchaApiUrl;break}}}else{}var c=a.currentOnloadMethodName;if(c){function e(){var a;if(typeof window[c]==="function"){a=window[c]}window[c]=function(){var n=FunCaptcha;FunCaptcha=function(a){if(a&&typeof a.callback=="function"){var t=a.callback;a.callback=function(){t.apply(this,arguments)}}Object.assign(__funcaptchaInitParameters,a);return n.apply(this,arguments)};if(typeof a==="function"){a.apply(this,arguments)}}}if(typeof window[c]!=="undefined"||c==="_funcaptchaOnloadMethod"){e()}else{var i=setInterval(function(){if(typeof window[c]==="undefined"){return}clearInterval(i);e()},1)}}})();